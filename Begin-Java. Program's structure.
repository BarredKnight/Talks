About begining in Java. Structure of a program. Gradle/Maven. And some more.

Друг спрашивает. Про курсы (хекслет в том числе) говорил, но он решил сам учить

greencode [11:15 PM] 
готов начать стажером

itmanager_kz [11:24 PM] 
Spring это хорошо. Банки насколько знаю любят его. Еще Play Framework хорош.

----- Today October 11th, 2015 -----

kirill.mokevnin [12:01 AM] 
Ребят, если вы с нуля и вам прямо очень хочется фреймворки, то ищите microframework

kirill.mokevnin [12:01 AM]
надо сначала базовые концепции понимать перед тем как во всякие play и spring погружаться

kirill.mokevnin [12:01 AM]
микрофреймворки на всех языках одинаковые

kirill.mokevnin [12:02 AM]
и пошли от рубишного sinatra

kirill.mokevnin [12:02 AM]
знаете один, знаете все

kirill.mokevnin [12:02 AM]
там ничего лишнего и это хороший способ научитсья и понять

kirill.mokevnin [12:03 AM]
http://sparkjava.com/
Spark Framework - Create web applications in Java rapidly. Spark is a micro web framework that lets you focus on writing your code, not boilerplate code.

kirill.mokevnin [12:03 AM]
даже тут написано

kirill.mokevnin [12:03 AM]
Why Not Use Sinatra?
If you're an experienced Ruby developer, or have experience with languages with similar syntax, you should probably use Sinatra. However, if you're a Java developer and want to get the benefits you get from Sinatra without having to learn a new language, Spark is a very good alternative. Spark is a simple and lightweight Java web framework that doesn't get in your way!

kirill.mokevnin [12:05 AM]
вы друга то сюда пригласите, пусть хоть почитает)

vgv [12:15 AM] 
Есть сомнение что вообще надо начинать изучение Java с web-части

vgv [12:15 AM]
Если вы только учите Java - то устроится получится в лучшем случае кем-то типа junior java developer

vgv [12:16 AM]
А для этого в первую очередь надо знать  core java

vgv [12:16 AM]
java.lang, java.util, java.io, Collections Framework

vgv [12:17 AM]
если есть еще время поучить - то JDBC + Concurrency, хотя бы на базовом уровне (что такое synchronized и volatile)

vgv [12:19 AM]
если еще есть время - Servlet'ы

vgv [12:19 AM]
без знания как работают сервлеты не получится понимать как работает вообще любой web-фреймворк в Java, хоть большой хоть маленький

vgv [12:19 AM]
исключая нестандартные фреймворки написанные на netty/grizzly etc., но это очень специальная тема уже

vgv [12:22 AM]
Я не спорю sparkjava хорош или плох, но надо понимать цель

vgv [12:23 AM]
Если цель - быстро что-то на Java нафигачить для веба - это одно

vgv [12:23 AM]
Если цель - изучить Java и делать серьезные вещи - начинать надо с другого немного

kirill.mokevnin [12:27 AM] 
я знаешь почему это не советую, в целом всем довольно очевидно что есть основы, но когда вот прямо там сидит самоучка которому побыстрому и в бой, он не будет месяцы тратить на изучение всей этой базы

vgv [12:28 AM] 
да, в каком-то смысле ты прав

kirill.mokevnin [12:28 AM] 
нас даже на хекслете (хоть мы постоянно говорим про важность основ) гонят во фреймворки (edited)

vgv [12:28 AM] 
с другой стороны я видел на собеседованиях людей которые не знают Java вообще

vgv [12:28 AM]
но пишут на Spring MVC/Play Framework etc.

kirill.mokevnin [12:28 AM] 
ну это вообще скажем так “типичный junior"

vgv [12:28 AM] 
это, наверное, с рельсами также )

kirill.mokevnin [12:28 AM] 
рельсы еще огня добавляют тем что язык меняют

vgv [12:29 AM] 
программист на рельсах который, тем не менее, может плоховато знать руби в целом )

kirill.mokevnin [12:29 AM] 
и тут реально иногда некоторые начинают думать что рельсы это язык

vgv [12:29 AM] 
да

vgv [12:29 AM]
в Java мне кажется это не так ярко выражено, потому что нет насколько популярного и единственного фреймворка

vgv [12:29 AM]
но все равно только руками развожу бывает

vgv [12:29 AM]
на собеседованиях

kirill.mokevnin [12:30 AM] 
поэтому я и рекомендую обычно микрофреймворки

kirill.mokevnin [12:30 AM]
мы в нашем php стеке будем как раз такой изучать (edited)

vgv [12:30 AM] 
может ты и прав

kirill.mokevnin [12:30 AM] 
по ним хорошо базу проходить

vgv [12:30 AM] 
от человека зависит, наверное

vgv [12:30 AM]
кому с чего интереснее начать

kirill.mokevnin [12:30 AM] 
а если человек в спринг сразу нырнул

kirill.mokevnin [12:30 AM]
то я даже боюсь представить как это влияет на его мозг)

kirill.mokevnin [12:31 AM]
если он исходит из того что жизнь это спринг

vgv [12:31 AM] 
да

vgv [12:31 AM]
но жизнь удобная )

vgv [12:31 AM]
я нашел свой текст, который обычно кидаю людям когда просят подсказать с чего учить Java (edited)

greencode [12:31 AM] 
я сам веб разработчик, поэтому аналогия с рельсами объяснила что к чему )

vgv [12:31 AM] 
если никто не против - кину его сюда

greencode [12:31 AM] 
конечно кидай, другу скину

greencode [12:31 AM]
и сюда позову

kirill.mokevnin [12:33 AM] 
я знаю людей которые даже на grails пишут

kirill.mokevnin [12:33 AM]
груви кстати как, живой вообще?

vgv [12:33 AM] 
живой как и всегда

vgv [12:33 AM]
то есть - не очень )

vgv [12:34 AM]
он как жил эти годы довольно в узкой нише

vgv [12:34 AM]
так и живет

kirill.mokevnin [12:34 AM] 
типа “напиши систему сборки” ?

vgv [12:34 AM] 
ага

vgv [12:35 AM]
———————————————————------
Первое - синтаксис и общая идея. Особо сложного ничего нет, кто-то забивает на это и начинает писать свой первый тестовый проект разбираясь по ходу дела. Кто-то читает базовые книги по Java. Посоветовать книги для начинающих увы не могу, сам такие книги никогда не читал. Вроде хвалят "Thinking in Java". У нее уже много ревизий и изданий, какие-то есть и переведенные на русский.

--------------

После того как есть базовые знания по языку, надо учить конкретные библиотеки и пакеты (конкретные - потому что в Java очень много всего)
1) Java Core (java.lang, java.util)
2) Java IO (java.io, Regexps, Charsets)
3) Java Collections Framework
4) Java Concurrency (понятие о Thread, ThreadLocal, synchronized, volatile. Если время есть - java.util.concurrency)
5) JDBC
6) Servlets

--------------

Методика изучения - сильно советую первую неделю писать код в обычном редакторе с подсветкой (vim/emacs/sublime etc.). Компилировать и запускать в командной строке.
После того как будут понятны базовые принципы - что такое компиляция, запуск, класс-файл, CLASSPATH, из чего состоит JDK и прочее - надо скачать IDE и забыть про vim и консоль.
* JDK - надо скачать с сайта Oracle (http://java.oracle.com).
* IDE - рекомендую IntelliJ IDEA Community Edition, брать тут - http://www.jetbrains.com/idea/download/index.html


Книги после того как немного "прокачался":
1) Effective Java
2) Java Concurrency in Practice
3) Java Puzzlers
4) The Art of Multiprocessor Programming
------------------------------------------------------------- (edited)

kirill.mokevnin [12:35 AM] 
а по поводу “пишет на spring но не знает яву”, а представь всю ту армию js “программистов"

vgv [12:36 AM] 
да, тоже хороший пример

vgv [12:36 AM]
это прямо вторые 50% людей что меня удивляют

vgv [12:36 AM]
я для себя это сформулировал как “jQuery испортил программистов"

vgv [12:36 AM]
- Как сделать AJAX-запрос?
- Да чо там делать-то, берешь jQuery…. (edited)

kirill.mokevnin [12:36 AM] 
я с другой стороны на это смотрю, jquery дало верстальщикам возможность почуствовать себя программистами

vgv [12:37 AM] 
- А без jQuery?
- эээ, а можно?

greencode [12:37 AM] 
тоже про jquery хотел написать. Про тех, которые не могут значение атрибута без библиотеки получить  )

vgv [12:39 AM] 
но, несмотря на то что лично меня это неприятно удивляет, в целом я рад такому

vgv [12:39 AM]
и в Java, и в Ruby и в JS

vgv [12:40 AM]
уровень зрелости индустрии

vgv [12:40 AM]
в каком-то смысле

vgv [12:40 AM]
что можно реально уже в глубины туда не лезть

vgv [12:40 AM]
а вот брать инструмент и выполнять задачу

vgv [12:40 AM]
это как прораб на стройке не занимается инженерными изысканиями

vgv [12:41 AM]
а берет, грубо говоря, справочник по грунтам и типам фундаментов и выбирает нужное

kirill.mokevnin [12:41 AM] 
в этом плане для меня стал откровением реакт, до него у меня было туго с js и я не понимал как на фронтенде правильно жить и все фреймворки были каким-то странным поделием

vgv [12:41 AM] 
да, реакт очень интересный

kirill.mokevnin [12:41 AM] 
а щас даже не зная хорошо js я с огромным удовольствием фигачу сложные приложения

kirill.mokevnin [12:41 AM]
и че то другим людям даже рассказываю

kirill.mokevnin [12:42 AM]
и вот в каждом направлении есть такая штука

kirill.mokevnin [12:42 AM]
верстка тоже всегда была темный лес, а тут раз тебе и autoprefixer + flexbox

kirill.mokevnin [12:42 AM]
все перестало быть магией

greencode [12:42 AM] 
только спать собрался и началось интересное обсуждение :simple_smile:

vgv [12:42 AM] 
дизайн тоже

kirill.mokevnin [12:42 AM] 
у нас в проекте везде flexbox и мы счастливы нереально

vgv [12:42 AM] 
не надо быть дизайнером, надо брать bootstrap )

kirill.mokevnin [12:42 AM] 
во во

kirill.mokevnin [12:43 AM]
и ansible и docker

kirill.mokevnin [12:43 AM]
короче начинать проект 5 лет назад и щас

kirill.mokevnin [12:43 AM]
это космическая разница

kirill.mokevnin [12:43 AM]
причем идет какая то стабилизация,не так чтобы раз в пять лет менялось все, а многие области наконец-то нащупали и приоребли то что теперь надолго и всерьез

kirill.mokevnin [12:43 AM]
flexbox например, сколько лет он шел до веба

vgv [12:44 AM] 
ну не знаю, я вот только вчера читал что докер умрет скоро :smile:

kirill.mokevnin [12:44 AM] 
ну докер как инструмент да

kirill.mokevnin [12:44 AM]
я про подход с контейнеризацией

vgv [12:44 AM] 
unikernel вытеснит эти ваши глупости )

kirill.mokevnin [12:44 AM] 
:smile:

vgv [12:44 AM] 
не, там прямо так и рубили с плеча

vgv [12:44 AM]
никакой контейнеризации, хватит уже

kirill.mokevnin [12:44 AM] 
или даже не так

kirill.mokevnin [12:45 AM]
я больше про имутабельную инфраструктуру (edited)

vgv [12:45 AM] 
это да

kirill.mokevnin [12:45 AM] 
то что все на коленке раньше делали

kirill.mokevnin [12:45 AM]
каждый сам

vgv [12:45 AM] 
да, пожалуй

vgv [12:46 AM]
можно ввести такой критерий зрелости языка/платформы/технологии

kirill.mokevnin [12:46 AM] 
ну и ansible, для проектов средней руки это же просто счастие

vgv [12:46 AM] 
можешь ли ты на ней делать вещи не включая мозг

vgv [12:46 AM]
если можешь - технология зрелая

vgv [12:46 AM]
назовем его “Критерий Мокевнина-Василькова” :smile:

kirill.mokevnin [12:46 AM] 
знаешь что самое смешное, почему эрланг в жопе до сих пор

vgv [12:46 AM] 
не будем скромничать )

kirill.mokevnin [12:47 AM] 
офигенный язык куча возможностей

vgv [12:47 AM] 
ну вот я про это и подумал почему-то

kirill.mokevnin [12:47 AM] 
но как была инфраструктура на уровне “восьмидесятники"

vgv [12:47 AM] 
не про конкретно erlang, но вот там рядом

kirill.mokevnin [12:47 AM] 
так ничего и не поменялось

kirill.mokevnin [12:47 AM]
и не поменяется

kirill.mokevnin [12:47 AM]
потому что там в головах это “ну есть же мейкфайл, нафига что то еще"

vgv [12:48 AM] 
ну, мейкфайл это как-то уже даже не то что не модно

kirill.mokevnin [12:48 AM] 
щас новые языки писать начинают с того что для них делают пакетные менеджеры крутые

vgv [12:48 AM] 
а просто как-то незнакомо уже, imho

kirill.mokevnin [12:48 AM] 
ибо понимают важность

vgv [12:48 AM] 
я вот сам всегда в доку лезу когда makefile надо править

kirill.mokevnin [12:48 AM] 
и с чем связана популярность в том числе

vgv [12:48 AM] 
да

kirill.mokevnin [12:49 AM] 
да что там говорить, они недавно только запилили (хвала богам) третью версию ребара который умеет зависимости лочить!

vgv [12:49 AM] 
легко сделать либу, легко куда-то выложить, легко обращаться с репозитарием этих либ и прочее

kirill.mokevnin [12:49 AM] 
2015 год на дворе

kirill.mokevnin [12:49 AM]
а до этого все форкали проекты

vgv [12:49 AM] 
ну на самом деле да

kirill.mokevnin [12:49 AM] 
чтобы не д ай бог не обновилось

vgv [12:49 AM] 
я, как избалованный   Java человек, очень не люблю языки без менеджеров таких

kirill.mokevnin [12:49 AM] 
секрет успеха go, fmt в язык встроили

kirill.mokevnin [12:49 AM]
и все

kirill.mokevnin [12:49 AM]
:smile:

kirill.mokevnin [12:49 AM]
народ писает кипятком

kirill.mokevnin [12:50 AM]
не надо спорить где скобки ставить

vgv [12:50 AM] 
да

vgv [12:50 AM]
PEP-8 тот же

vgv [12:50 AM]
где-то здесь же

vgv [12:50 AM]
для Java - Sun Coding Convention, который не формализован в виде инструмента, но у 99% программистов где-то в мозжечке уже (edited)

kirill.mokevnin [12:50 AM] 
мы как бабульки на лавочке такие пообсуждали что мир уже не тот

kirill.mokevnin [12:50 AM]
:smile:

vgv [12:50 AM] 
да

vgv [12:51 AM]
- Корвалол-то как подорожал!
- И не говори!!

kirill.mokevnin [12:53 AM] 
кстати ты знаешь, что в rust писать их менеджер пакетов позвали (может они сами пошли) тех люди которые сделали bundler для руби

kirill.mokevnin [12:53 AM]
cargo

kirill.mokevnin [12:53 AM]
я поэтому не сомневаюсь что их ждет успех %)

vgv [12:54 AM] 
не знаю, но cargo хороший

vgv [12:54 AM]
кстати, периодически слышу от рубистов опасение про rust

kirill.mokevnin [12:54 AM] 
туда рванула кучка рубистов

kirill.mokevnin [12:54 AM]
известных

vgv [12:54 AM] 
как мне объяснил кто-то - то ли несколько видных рубистов туда свалило, то ли эти видные рубисты где-то публично очень тепло про rust отзываются

vgv [12:54 AM]
а, ну вот

kirill.mokevnin [12:55 AM] 
в том числе вот карго они сделали

vgv [12:55 AM] 
не, карго отличный

kirill.mokevnin [12:55 AM] 
но я не уверен что ты знаешь про бандлер, а он в свою очередь оказался настолько удачным что его все скопипастили

vgv [12:55 AM] 
языка-то, блин, еще не было в релизе, а пакетный менеджер уже был

kirill.mokevnin [12:55 AM] 
cocapods (это айосники), nuget (microsoft)

kirill.mokevnin [12:55 AM]
и многие другие

kirill.mokevnin [12:55 AM]
вот вот

vgv [12:56 AM] 
не, бандлер я не знаю

vgv [12:56 AM]
как пользователь только

vgv [12:56 AM]
когда ставил что-то рубишное

kirill.mokevnin [12:56 AM] 
и я помню давно еще тонский жаловался про отсутствие нормальных пакетных менеджеров, даже лев, и в итоге все свои хотелки которые они перечисляли я им говорил “ну вот же бандлер"

kirill.mokevnin [12:56 AM]
они мне много лет “не то"

kirill.mokevnin [12:56 AM]
в итоге rebar3 это почти бандлер

kirill.mokevnin [12:58 AM]
а но все равно там жопа полная, потому что есть альтернативный менеджер

kirill.mokevnin [12:58 AM]
и первый  и второй никак не связаны с командой разработки языка

kirill.mokevnin [12:58 AM]
*ушел плакать

vgv [12:59 AM] 
да язык просто старый уже

vgv [12:59 AM]
тогда никто не писал пакетных менеджеров

vgv [12:59 AM]
в   Java вон тоже сбоку прибит

vgv [1:00 AM]
прибит удачно, надо сказать (я про градл), но тем не менее

kirill.mokevnin [1:00 AM] 
кстати я до сих пор не понимаю как в яве

kirill.mokevnin [1:00 AM]
потому что вижу некоторый зоопарк

kirill.mokevnin [1:00 AM]
как минимум средств сборки

vgv [1:00 AM] 
да

kirill.mokevnin [1:00 AM] 
а они как то с пакетными менеджерами у вас хитро переплетаются

kirill.mokevnin [1:00 AM]
у нас это разные вещи

vgv [1:00 AM] 
вот

vgv [1:00 AM]
исторически был ant

kirill.mokevnin [1:01 AM] 
это да

vgv [1:01 AM] 
средство сборки и вообще автоматизации чего хочешь

kirill.mokevnin [1:01 AM] 
я его форки юзал в php

kirill.mokevnin [1:01 AM]
порты точнее

vgv [1:01 AM] 
никакого пакетного менеджера, грубо говоря make с синтаксисом XML

kirill.mokevnin [1:01 AM] 
ну да, декларативный и все такое

vgv [1:01 AM] 
но довольно удобен тем что очень простой, прямо тупой

kirill.mokevnin [1:01 AM] 
я хорошо понимаю, писал

vgv [1:01 AM] 
не, как раз наоборот - императивный

vgv [1:01 AM]
возьми вот этот файл и положи туда

vgv [1:01 AM]
а теперь выполни вот эту команду

vgv [1:02 AM]
ничего не знает про твой проект

vgv [1:02 AM]
какие там модули, какие зависимости

vgv [1:02 AM]
нихера

kirill.mokevnin [1:02 AM] 
точнее я имел ввиду что тебе надо команды описывать в коде

kirill.mokevnin [1:02 AM]
чтобы ты получил новое поведение в xml

vgv [1:02 AM] 
поэтому в многомодульном проекте, например, ты сам указываешь ему в каком порядке что компилировать (edited)

vgv [1:02 AM]
потом появился maven и это уже сборщик + пакетный менеджер

vgv [1:02 AM]
и вот он декларативный во все поля

vgv [1:03 AM]
convention over configuration и все такое

kirill.mokevnin [1:03 AM] 
я видел эти over configuration на несколько экранов

vgv [1:03 AM] 
+ в файле сборки ты описываешь зависимости

vgv [1:03 AM]
типа - мне надо junit такой версии, postgresql-driver такой и так далее

vgv [1:03 AM]
и maven это сам скачает откуда надо

kirill.mokevnin [1:03 AM] 
у вас один центральный репозиторий дефолтный есть?

vgv [1:03 AM] 
и подключит эти либы во время сборки/прогона тестов и так далее

vgv [1:04 AM]
есть несколько крупных

vgv [1:04 AM]
самый крупный на maven.org

kirill.mokevnin [1:04 AM] 
а зачем разные?

kirill.mokevnin [1:04 AM]
исторически?

vgv [1:04 AM] 
но есть еще от jboss, от sonatype и еще всякие

vgv [1:04 AM]
не, это же не запрещено

vgv [1:04 AM]
сели ребята в JBoss и подняли свой

kirill.mokevnin [1:04 AM] 
я понимаю что что иногда нужны сторонние, но в ruby такое делоают только когда нужен приватный

kirill.mokevnin [1:04 AM]
потому что никакого смысла что то поднимать

kirill.mokevnin [1:05 AM]
отправить в rubygems это две команды

kirill.mokevnin [1:05 AM]
rake gem <name> rake release

vgv [1:05 AM] 
вот, в  Java не две команды

vgv [1:05 AM]
в Java отправит в публичный репозиторий немного больше геммороя

vgv [1:05 AM]
я свой consul-api им отправляю периодически

kirill.mokevnin [1:05 AM] 
ого ты либу заделал

kirill.mokevnin [1:06 AM]
популярен?)

vgv [1:06 AM] 
его надо подписать, его надо с доками и исходниками, надо оформить правильно и все такое

kirill.mokevnin [1:06 AM] 
там модерация?

vgv [1:06 AM] 
github.com/ecwid/consul-api

kirill.mokevnin [1:06 AM] 
или на тебя будут смотреть косо?

vgv [1:06 AM] 
когда мы сели интегрироваться с консулом - выясниил что либы для него нет

vgv [1:06 AM]
написали сами и выложили

vgv [1:06 AM]
да, там модерация

kirill.mokevnin [1:06 AM] 
фантастика

kirill.mokevnin [1:06 AM]
на яве и нет

vgv [1:06 AM] 
при рассмотрении твоей заявки

vgv [1:06 AM]
теперь-то их несколько )

vgv [1:06 AM]
но вот когда нам надо было - еще не было ни одной )

vgv [1:06 AM]
мы первые были

vgv [1:07 AM]
в списке рассылки сам автор охуел, сказал что это самый полный клиент после Go-клиента

kirill.mokevnin [1:07 AM] 
ты знаешь про судьбу pear? это php такой древний клон cpan который много лет был единственным центральным репозиторием

kirill.mokevnin [1:07 AM]
офигенная покзаательная история

kirill.mokevnin [1:07 AM]
ее иногда показывают на докладах

kirill.mokevnin [1:08 AM]
там были суперстрогие правила, сложный флоу проверки

vgv [1:08 AM] 
пользовался когда на PHP писал, сейчас не знаю

kirill.mokevnin [1:08 AM] 
стандарты кодирования

kirill.mokevnin [1:08 AM]
куча всего

vgv [1:08 AM] 
ааа )

kirill.mokevnin [1:08 AM] 
в итоге за много лет существования 2000 либ

kirill.mokevnin [1:08 AM]
половина из которых не обновляется

kirill.mokevnin [1:08 AM]
ну и дальше по списку

vgv [1:08 AM] 
ну да, это понятно

vgv [1:08 AM]
но в Java другая история

kirill.mokevnin [1:08 AM] 
в это время rubygems с 0 до 100 тыщ

vgv [1:08 AM] 
либ полно, все выкладывают

kirill.mokevnin [1:08 AM] 
и 2 года назад “миллиард скачиваний"

vgv [1:08 AM] 
модерация при первой твоей попытке

kirill.mokevnin [1:09 AM] 
а оно надо?

vgv [1:09 AM] 
типа “Я Василий, хочу вот тут либу залить"

kirill.mokevnin [1:09 AM] 
там кому то деньги платят?

vgv [1:09 AM] 
отправляешь заявку на аппрув аккаунта своего, его аппрувают и дальше лей

vgv [1:09 AM]
то есть сейчас мне тоже выложить новую версию либы - это две команды

vgv [1:09 AM]
но вот самую первую версию в самый главный репозиторий - немного больше геммороя

vgv [1:10 AM]
ну и вот, maven принес в Java вот эти репозитарии с либами

vgv [1:10 AM]
которые сами приезжают на твой компьютер

vgv [1:11 AM]
+ он принес неплохую поддержку многомодульных проектов, поддержку в IDE и стандартный life-cycle сборки приложения

vgv [1:11 AM]
типа - сначала фаза обработки ресурсов, потом - компиляции, потом упаковки, потом прогона тестов, потом заливки полученного артефакта куда надо

vgv [1:12 AM]
но беда maven, на мой взгляд, в том что он декларативный со строго определенным life-cycle

vgv [1:12 AM]
а в большом проекте у тебя обязательно вылезет что-то сбоку

vgv [1:12 AM]
типа - перед компиляцией вот эти три исходничка еще тулзой какой-нибудь обработать

vgv [1:12 AM]
и ты будешь городить костыли

vgv [1:13 AM]
и чем больше проект - тем больше у тебя такого нестандартного и тем страшнее получается файл сборки

vgv [1:13 AM]
поэтому когда появился gradle - все обрадовались

vgv [1:14 AM]
он вроде как тоже convention over configuration, поэтому каждый шаг не надо описывать (как в ant)

vgv [1:14 AM]
но с другой стороны, скрипт сборки не XML, а обычный groovy-файл

vgv [1:14 AM]
хочешь - напиши прямо в нем что надо делать прямо на универсальном языке программирования

vgv [1:14 AM]
а не каком-то ограниченном DSL

vgv [1:15 AM]
+ gradle тоже знает про пакеты и использует тот же формат что и maven

vgv [1:15 AM]
потому отлично работает со всей инфраструктурой что уже построена для maven

vgv [1:15 AM]
за годы до появления градла вообще

kirill.mokevnin [1:15 AM] 
ага gradle взяли с рейка

kirill.mokevnin [1:16 AM]
там целая плеяда инструментов под все языки появилась аля рейк

vgv [1:17 AM] 
да, может быть, спорить не буду

vgv [1:17 AM]
но просто инструмента сейчас мало

kirill.mokevnin [1:17 AM] 
я просто раньше историю копал когда всякие доклады делал

vgv [1:17 AM] 
то есть, кроме интеграции пакетного менеджера со сборщиком появилась третья часть

vgv [1:17 AM]
очень важная

kirill.mokevnin [1:17 AM] 
но у вас тут опять же все в одном

vgv [1:17 AM] 
это интеграция с IDE

kirill.mokevnin [1:18 AM] 
то есть нет просто “зависимости”, есть “инструмент который щас все сделает"

kirill.mokevnin [1:18 AM]
)

vgv [1:18 AM] 
потому что вот у нас Ecwid - многомодульный проект

vgv [1:18 AM]
около 100 модулей

vgv [1:18 AM]
причем не плоская структура, а на 3 уровня

vgv [1:18 AM]
у каждого модуля - свои зависимости

vgv [1:18 AM]
как от других модулей проекта, так и от внешних jar-ов

vgv [1:19 AM]
все эти зависимости описаны в gradle-файлах, конечно

kirill.mokevnin [1:19 AM] 
ты под модулем считаешь просто либу или прямо обособленный проект?

vgv [1:19 AM] 
но я хочу чтобы когда я открываю проект в IDEA - идея подсосала все эти зависимости

vgv [1:19 AM]
под модулем я считаю внутреннюю либу Ecwid либо один из сервисов

vgv [1:20 AM]
обособленный проект - ммм, не понял мысль

vgv [1:21 AM]
у нас весь Ecwid в одной репе

kirill.mokevnin [1:23 AM] 
сервис да

kirill.mokevnin [1:23 AM]
просто у нас есть четкое деление

kirill.mokevnin [1:23 AM]
есть библиотеки они же гемы

kirill.mokevnin [1:23 AM]
и есть сервис

kirill.mokevnin [1:24 AM]
и мне не очень понятно объединение модулей и сервисов в одно

vgv [1:24 AM] 
ну вот эти библиотеки - они вами писаны?

kirill.mokevnin [1:24 AM] 
это же разные весовые категории

vgv [1:24 AM] 
или это внешние какие-то?

kirill.mokevnin [1:24 AM] 
есть что мы пишем есть что мы не пишем, но это просто либы

vgv [1:24 AM] 
чужие либы?

kirill.mokevnin [1:24 AM] 
чужих мы сотнями используем

vgv [1:24 AM] 
да

vgv [1:24 AM]
и это не часть проекта

kirill.mokevnin [1:24 AM] 
в нашем лок файле штук двести я думаю может больше

vgv [1:24 AM] 
внешние зависимости

kirill.mokevnin [1:25 AM] 
а с точки зрения либ у нас нет разницы

kirill.mokevnin [1:25 AM]
гем он и в африке гем

kirill.mokevnin [1:25 AM]
причем у нас все что гем, то публичное

kirill.mokevnin [1:25 AM]
закрытых либ нет своих

kirill.mokevnin [1:25 AM]
остальное это прикладной код который все это юзает

vgv [1:26 AM] 
а зачем ваш внутренний гем публичный?

vgv [1:26 AM]
какую ценность он для остальных представляет?

kirill.mokevnin [1:26 AM] 
ну мы в либы выделяем то что как твой consul-api

vgv [1:26 AM] 
если это кусок какой-то вашей логики

kirill.mokevnin [1:26 AM] 
у нас монолитное приложение

kirill.mokevnin [1:26 AM]
мы еще маленькие)

kirill.mokevnin [1:26 AM]
по сравнению с вами

vgv [1:26 AM] 
да, но consul-api это специально написанная либа без завязок на Ecwid

kirill.mokevnin [1:26 AM] 
ну да, поэтому я и говорю

vgv [1:26 AM] 
поэтому его имело смысл опен-сорсить

kirill.mokevnin [1:26 AM] 
гем это почти всегда либа общего назначения

kirill.mokevnin [1:27 AM]
так чтобы появилась либа с нашей внутренней логикой это должно наше монолитное приложение разделиться

vgv [1:27 AM] 
ммм

vgv [1:27 AM]
но ты же можешь какой-то код вытащить в отдельный

vgv [1:27 AM]
отдельный что?

vgv [1:27 AM]
папку

vgv [1:27 AM]
либу

vgv [1:27 AM]
как это называется?

vgv [1:27 AM]
в рубях

kirill.mokevnin [1:27 AM] 
да никак

kirill.mokevnin [1:27 AM]
у тебя просто файл или набор файлов

kirill.mokevnin [1:27 AM]
но мы это никак не выделяем внутри

vgv [1:28 AM] 
так

vgv [1:28 AM]
чтобы мне понять

vgv [1:28 AM]
давай через пример

kirill.mokevnin [1:28 AM] 
гем это вот прямо отдельная штука, все остальное просто по папкам лежит

kirill.mokevnin [1:28 AM]
у нас дерьмовая реализация неймспейсов :smile:

vgv [1:28 AM] 
например, вы напишете либу для парсинга адреса человека из той невнятной херни что он на сайте написал

vgv [1:28 AM]
ну, вот такой у меня пример

vgv [1:28 AM]
и этот код захотите использовать в двух ваших сервисах

vgv [1:28 AM]
но не опен-сорсить

vgv [1:29 AM]
как это будет выглядеть в руби?

kirill.mokevnin [1:29 AM] 
разные сервисы значит это разные проекты

kirill.mokevnin [1:29 AM]
у нас проект рубевый один

kirill.mokevnin [1:29 AM]
монолитный

kirill.mokevnin [1:29 AM]
поэтому зачем от него отделять то что в нем

vgv [1:29 AM] 
ну, когда монолит да, это я понимаю

vgv [1:29 AM]
но я дальше не понимаю

kirill.mokevnin [1:29 AM] 
а дальше просто делаешь файл lib/normalizer.rb

vgv [1:29 AM] 
если дальше рассмотреть пример

vgv [1:29 AM]
так

kirill.mokevnin [1:29 AM] 
и юзаешь где хочешь в проекте

vgv [1:30 AM] 
ага

kirill.mokevnin [1:30 AM] 
код загрузится сам

vgv [1:30 AM] 
так

vgv [1:30 AM]
а если сервисы по разным репам хранятся?

kirill.mokevnin [1:30 AM] 
тут никто не участвует кроме самих рельс в которых есть правила автозагрузки

kirill.mokevnin [1:30 AM]
ну я то ваш случай понимаю, у нас монолит

kirill.mokevnin [1:30 AM]
все в одном

vgv [1:30 AM] 
не, мне до конца еще непонятно просто

kirill.mokevnin [1:30 AM] 
?

vgv [1:30 AM] 
вот я хочу свой код в нескольких своих же сервисах

vgv [1:31 AM]
но не хочу его делать гемом и выкладывать публично

vgv [1:31 AM]
как это будет выглядеть в руби?

kirill.mokevnin [1:31 AM] 
у нас так не бывает

kirill.mokevnin [1:31 AM]
публично не надо

vgv [1:31 AM] 
гм

kirill.mokevnin [1:31 AM] 
делай гем на внутренном сервере

vgv [1:31 AM] 
не, ну я даже не про вас

kirill.mokevnin [1:31 AM] 
в руби стандарт, любая либа это гем

vgv [1:31 AM] 
а вообще про практики

vgv [1:31 AM]
но гем не обязательно публичный?

kirill.mokevnin [1:31 AM] 
это делается тривиально и по другому не бывает

kirill.mokevnin [1:31 AM]
конечно это от тебя зависит

vgv [1:31 AM] 
а

kirill.mokevnin [1:31 AM] 
но в целом у нас нет практики делать много публичных реп

kirill.mokevnin [1:31 AM]
есть одна центральная и все

vgv [1:31 AM] 
и ты ставишь внутри организации какой-то гем-сервер?

kirill.mokevnin [1:31 AM] 
так как никакой модерации и туда все льют

kirill.mokevnin [1:31 AM]
ну или юзай саас

vgv [1:31 AM] 
который рулит твоими приватными гемами?

kirill.mokevnin [1:31 AM] 
их полно

kirill.mokevnin [1:32 AM]
да как то так

vgv [1:32 AM] 
все, я понял

vgv [1:32 AM]
tnx

vgv [1:32 AM]
а к чему мы это? )

kirill.mokevnin [1:32 AM] 
про разеленеие

vgv [1:32 AM] 
а, ну к тому что модулей до жопы

vgv [1:33 AM]
зависимости между ними сложные

kirill.mokevnin [1:33 AM] 
*разделение

kirill.mokevnin [1:33 AM]
кстати почему тебя парит сложность зависимостей?

kirill.mokevnin [1:33 AM]
я иногда слышу это “сложные зависимости"

kirill.mokevnin [1:33 AM]
вы же их не руками рулите

vgv [1:33 AM] 
при сборке - да, не руками

vgv [1:33 AM]
ну вот представь

vgv [1:33 AM]
у меня сложный проект

vgv [1:33 AM]
100 модулей

vgv [1:33 AM]
+ 200 внешних зависимостей

vgv [1:33 AM]
примерно

vgv [1:34 AM]
каждый из этих 100 модулей зависит от N внутренних модулей и M внешних либ

vgv [1:34 AM]
это все прописано в скрипте сборки

vgv [1:34 AM]
и когда я собираю проект из консоли (для деплоя, например) - с этим проблем никаких

vgv [1:34 AM]
gradle вычитывает эти зависимости и делает все красиво (edited)

vgv [1:34 AM]
но я-то хочу чтобы IDE тоже знала про эти зависимости

vgv [1:34 AM]
какой модуль от какого зависит

vgv [1:35 AM]
и какие внешние классы (из внешних зависимостей) в этом модуле доступны

vgv [1:35 AM]
это облегчает жизнь капитально, тот же Autocomplete или компиляцию на лету

vgv [1:36 AM]
если я написал в каком-то модуле код, который ему просто недоступен - IDEA мне сразу скажет что я неправ

vgv [1:36 AM]
поэтому очень важно чтобы IDE умела весь этот граф зависимостей поднять из gradle/maven-скриптов

kirill.mokevnin [1:37 AM] 
у меня в виме даже так работаеь

vgv [1:38 AM] 
даже так - это как?

kirill.mokevnin [1:38 AM] 
Проваливание

kirill.mokevnin [1:39 AM]
во все зависимости

vgv [1:39 AM] 
да, но надо-то не во все

vgv [1:39 AM]
а только в те что доступны этому модулю

vgv [1:39 AM]
что “видны” ему

kirill.mokevnin [1:39 AM] 
не

kirill.mokevnin [1:39 AM]
У нас не так

kirill.mokevnin [1:40 AM]
бандлер делает лок файл, там раскручены все зависимости

kirill.mokevnin [1:40 AM]
вообще все

vgv [1:41 AM] 
когда у нас был почти монолит - с этим тоже проблем не было

kirill.mokevnin [1:41 AM] 
Это часть системы зависимости

vgv [1:41 AM] 
но у тебя же vim должен понимать

vgv [1:41 AM]
вот ты пишешь код из модуля  moduleA

vgv [1:41 AM]
какие либы подключены к этому модулю?

vgv [1:41 AM]
какой версии

vgv [1:42 AM]
а, до меня вроде доходит )

kirill.mokevnin [1:42 AM] 
он знает

vgv [1:42 AM] 
если тебе понадобится еще одно web-приложение - ты отдельную репу сделаешь?

kirill.mokevnin [1:42 AM] 
Да

vgv [1:42 AM] 
или можно 2 рельсовых приложения рядом иметь?

vgv [1:42 AM]
ааа

vgv [1:42 AM]
то есть у тебя получается что в каждой репе - монолит

vgv [1:42 AM]
так?

kirill.mokevnin [1:43 AM] 
да

vgv [1:43 AM] 
и если сервис много-сервисный - ты собираешь его из нескольких реп?

kirill.mokevnin [1:43 AM] 
сек, неудобно вести коляску и набирать) щас до парка доеду

kirill.mokevnin [1:48 AM]
так)

kirill.mokevnin [1:48 AM]
как я упоминал у нас четко два типа проектов с кодом

kirill.mokevnin [1:48 AM]
гем и приложение

kirill.mokevnin [1:49 AM]
приложение это конечный продукт, его версионность никак не связана с гемами

kirill.mokevnin [1:49 AM]
это аппликейшен левел

vgv [1:49 AM] 
и вот такое приложение в репе одно

vgv [1:49 AM]
да?

vgv [1:50 AM]
вот этот “конечный продукт"

kirill.mokevnin [1:50 AM] 
можно хранить их там хоть 10 в одной репе, связи с контролем версии нет

kirill.mokevnin [1:51 AM]
просто отдельные папки

kirill.mokevnin [1:51 AM]
управляются они независимо

vgv [1:52 AM] 
а в каждой папке - отдельное самостоятельное рельсовое приложение?

kirill.mokevnin [1:52 AM] 
если надо управлять зависимо (я слабо представляю зачем это делать на уровне кода)

kirill.mokevnin [1:52 AM]
не обязательно рельсовое

vgv [1:52 AM] 
а, ну не рельсовое

kirill.mokevnin [1:52 AM] 
но приложение это что то независимое и конечное

kirill.mokevnin [1:53 AM]
все рубишные приложения обьединяет только бандлер внутри и рейк

kirill.mokevnin [1:54 AM]
я имею ввиду что их используют все

kirill.mokevnin [1:54 AM]
ты всегда найдешь внутри рубишной апы Gemfile

kirill.mokevnin [1:54 AM]
но! тебе никто не запрещает сделать приложение гемом)

vgv [1:55 AM] 
и влепить его как зависимость в другие приложения? )

kirill.mokevnin [1:55 AM] 
да)

vgv [1:55 AM] 
всё как я люблю )

kirill.mokevnin [1:56 AM] 
но опять же, все разруливает бандлер

vgv [1:56 AM] 
ну вот смотри - у тебя 2 конечных приложения

vgv [1:56 AM]
одно зависит от GemA и GemB

kirill.mokevnin [1:56 AM] 
поэтому мне сложно представить что такое "сложные зависимости" как проблему

vgv [1:57 AM] 
а второе - только от GemA

vgv [1:57 AM]
когда ты пишешь код во втором приложении

vgv [1:57 AM]
vim же не должен тебе показывать код из GemB

vgv [1:57 AM]
его же нет в зависимостях у этого второго приложения

vgv [1:57 AM]
ServiceA  :: GemA, GemB
ServiceB :: GemA

vgv [1:58 AM]
вот как-то так

kirill.mokevnin [1:58 AM] 
ну так у меня разные вимы открыты если я в двух разных приложениях

vgv [1:58 AM] 
ааа

vgv [1:58 AM]
а у меня одна IDEA )

kirill.mokevnin [1:58 AM] 
но в целом редко когда я правлю код сразу в разных приложениях это же по сути разные проекты

vgv [1:58 AM] 
и она должна это все понимать

vgv [1:59 AM]
а мы постоянно

vgv [1:59 AM]
потому что половина фич затрагивает код сразу в нескольких модулях

vgv [1:59 AM]
и ты в одной IDEA сразу правишь все и везде

kirill.mokevnin [1:59 AM] 
мне все таки кажется сто ты говоришь про уровннь библиотек

kirill.mokevnin [2:00 AM]
я не могу себе представить ситуацию что мне надо одновременно код в двух проектах править

vgv [2:00 AM] 
ну не знаю, разросся у вас hexlet

vgv [2:00 AM]
например

vgv [2:01 AM]
и стал состоять их 5 различных web-сервисов

vgv [2:01 AM]
и вот у тебя фича, которая затрагивает 2 сервиса из пяти

vgv [2:01 AM]
я чисто гипотетически щас

vgv [2:01 AM]
как ты будешь ее кодить?

kirill.mokevnin [2:02 AM] 
сначала один проект потом другой

kirill.mokevnin [2:02 AM]
они же по апи общаются

kirill.mokevnin [2:02 AM]
это разные веб сервисы

vgv [2:02 AM] 
да, разные

vgv [2:03 AM]
но что ты вкладываешь в понятие “сначала один потом другой”

kirill.mokevnin [2:03 AM] 
я собственно так и работаю с батло сервисом

vgv [2:03 AM] 
то тчо ты и релизить их отдельно будешь?

kirill.mokevnin [2:03 AM] 
который на эрланге

vgv [2:03 AM] 
или просто - сначала пописал в одном виме, а потом пописал в другом?

kirill.mokevnin [2:03 AM] 
а зачем одновременно? тесты у них независимые код тоже

kirill.mokevnin [2:03 AM]
общаются они по шине или http

vgv [2:04 AM] 
то есть релизить ты их тоже планируешь отдельно?

kirill.mokevnin [2:04 AM] 
иногда да

kirill.mokevnin [2:05 AM]
у нас релиз батла это рестарт бекенда сейчас, поэтому он значительно реже

vgv [2:05 AM] 
не, я тогда опять не понял твою фразу "сначала один проект потом другой"

vgv [2:05 AM]
что сначала - писать код сначала?

vgv [2:05 AM]
или релизить сначала?

vgv [2:05 AM]
то есть ты имел в виду - пошел в одном виме пописал

vgv [2:05 AM]
потом в другом виме пописал?

vgv [2:06 AM]
или более долгий цикл?

vgv [2:06 AM]
пописал в одном виме, протестил, отрелизил

vgv [2:06 AM]
пошел во второй вим

kirill.mokevnin [2:06 AM] 
пописал в виме поправил код тесты возможно заккомитил если другая репа

kirill.mokevnin [2:07 AM]
может даже доку поправил

kirill.mokevnin [2:07 AM]
пошел в другой сервис

vgv [2:07 AM] 
ага

vgv [2:07 AM]
все, я понял

vgv [2:07 AM]
мы движемся тоже маленькими кусками, но ортогонально, скажем так

vgv [2:08 AM]
поправил немного везде - закоммитал

vgv [2:08 AM]
потом еще поправил везде где надо - закоммитал

vgv [2:08 AM]
после каждого коммита тесты и прочее должны работать на всем проекте

kirill.mokevnin [2:10 AM] 
а понял, да все правильно. у нас нет интеграционных тестов такого уровня.

vgv [2:10 AM] 
+ так как у нас строгая типизация - я хочу видеть где я сломал сигнатуру или еще что по всему проекту сразу

vgv [2:10 AM]
и для этого IDEA должна знать весь граф зависимостей

kirill.mokevnin [2:10 AM] 
так апи же

vgv [2:10 AM] 
ну, API это частный случай

vgv [2:11 AM]
у нас много и просто библиотек общих (edited)

vgv [2:11 AM]
внутренних

vgv [2:11 AM]
+ внутреннее общение сервисов у нас ​*не*​ через REST

vgv [2:12 AM]
а через типобезопасный RPC

kirill.mokevnin [2:12 AM] 
да у нас там тоже рестом не пахнет, в основвном вебсокеты

vgv [2:12 AM] 
поэтому там тоже если что-то не так вызвал или расширил - тебе сразу IDEA скажет где ты дурак

kirill.mokevnin [2:12 AM] 
это круто да

vgv [2:12 AM] 
до компиляции, тестов и прочего

vgv [2:12 AM]
прямо вот красным подчеркнет :simple_smile:

vgv [2:12 AM]
как Word )

vgv [2:13 AM]
+ есть такой редкий случай с управлением зависимостями

kirill.mokevnin [2:13 AM] 
я только не знаю как вы этого в гетерогенной среде будете добиваться

vgv [2:13 AM] 
это когда у меня ServiceA зависит от одной версии библиотеки

kirill.mokevnin [2:13 AM] 
у нас разные сервисы это разные платформы

vgv [2:13 AM] 
а SericeB - от другой версии

vgv [2:14 AM]
и IDE должна понимать в каком сервисе я сейчас пишу код и правильно подсказывать мне

kirill.mokevnin [2:14 AM] 
нода эрланг руби даже экстеншен для хрома

vgv [2:14 AM] 
“этого”  - смотря чего

kirill.mokevnin [2:14 AM] 
типобезопасных коммуникаций

vgv [2:14 AM] 
а, ну это просто

vgv [2:14 AM]
если язык вообще типизированный - то это просто

vgv [2:15 AM]
если язык не типизированный - ну, тут мне никто не подскажет ничего by design

kirill.mokevnin [2:15 AM] 
ни одного типизированного )

vgv [2:15 AM] 
поэтому у вас нет такого прекрасного RPC как у нас )

vgv [2:15 AM]
а у нас есть, ни одного нетипизированного языка пока нет

vgv [2:15 AM]
поэтому пока все хорошо

kirill.mokevnin [2:16 AM] 
но если говорить про рест то тут есть рамл

vgv [2:16 AM] 
ну а появится, например, python на backend’е - ну будем головы чесать

kirill.mokevnin [2:16 AM] 
я думаю можно поверх накрутить уонтроль

vgv [2:16 AM] 
может быть, но мне не очень нравится сама идея использовать рест внутри

vgv [2:16 AM]
независимо от языка

vgv [2:17 AM]
рест как internal протокол мне лично не нравится

kirill.mokevnin [2:17 AM] 
ну у нас пока вебсокеты основной способ

vgv [2:17 AM] 
потому что rest очень негибкий, на мой взгляд

kirill.mokevnin [2:17 AM] 
и тут без вльтернатив

vgv [2:18 AM] 
ну, вебсокеты этож не то, считай plain tcp

vgv [2:18 AM]
а rest требует дизайна и раздумий

vgv [2:18 AM]
а для внутренней коммуникации мне этого не надо

vgv [2:18 AM]
мне надо быстро и удобно общаться между сервисами (edited)

vgv [2:18 AM]
поэтому выбрали RPC-style

kirill.mokevnin [2:19 AM] 
для внутренних обычно шину делают на кролике

kirill.mokevnin [2:19 AM]
рубисты по крайней мерк

vgv [2:19 AM] 
ммм

vgv [2:19 AM]
но это же для асинхронных сообщений только?

kirill.mokevnin [2:19 AM] 
да, синхронные рест

kirill.mokevnin [2:20 AM]
но тут как ты понимаешь рест это не технология

vgv [2:20 AM] 
вот, и этот синхронный рест мне кажется очень дорогим

kirill.mokevnin [2:20 AM] 
у каждого немного свой рест

vgv [2:20 AM] 
для внутреннего общения

vgv [2:20 AM]
да, но все равно ты же не наговнишь там

vgv [2:20 AM]
сядешь, любовно выберешь адресацию

vgv [2:20 AM]
глаголы

vgv [2:20 AM]
энтити

vgv [2:21 AM]
а через три дня тебе еще надо добавить 20 методов и они вообще не вписываются в то, что ты тут понавыдумывал

kirill.mokevnin [2:21 AM] 
у нас на это дело автоматика нормальная, но в целом зыбкая зона, очень много факторов

vgv [2:21 AM] 
вот, да

vgv [2:21 AM]
поэтому мы выбрали RPC

vgv [2:21 AM]
у сервиса висит наружу один эндпойнт, типа /rpc

vgv [2:22 AM]
а ему туда протобафы летят (edited)

vgv [2:22 AM]
с полным описанием вызова

vgv [2:22 AM]
какой метод, какая арность, какие параметры, авторизация и прочее

vgv [2:23 AM]
захотел я еще 20 методов добавить - ну в этот эндпойнт полетит не 10 разных вызовов, а еще +20

vgv [2:23 AM]
ничего не надо менять

vgv [2:23 AM]
как-то так мы рассуждали

kirill.mokevnin [2:23 AM] 
я думаю мы так же будем делать когда появится такое разделение

vgv [2:23 AM] 
+ протокол поддерживает сразу асинхронные и потоковые вызовы еще

vgv [2:23 AM]
то есть sync, async, stream

kirill.mokevnin [2:23 AM] 
Но оно у нас не появится пока мы не заработаем )

vgv [2:25 AM] 
)
блин, зашел на минутку рассказать про последовательность изучения Java :simple_smile:

kirill.mokevnin [2:25 AM] 
-)

atetc [11:50 AM] 
:0

iysbaera [12:07 PM] 
@vgv Я бы почитал, но сейчас полистал что вы тут накатали...
